server:
  port: 7777
spring:
  application:
    name: kafka
  kafka:
    bootstrap-servers: 10.120.52.34:9092,10.120.552.34:9093
    #producer:
    #  key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #  value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #  batch-size: 131072  #128kb
    #  buffer-memory: 67108864 #64M
    #  #max-request-size: 5242880
    #  #linger-ms: 5
    #  retries: 1
    #  acks: 0
    #  compression-type: gzip  #提升性能很重要
    #  properties:
    #    max.request.size: 5242880 #5M
    #    linger.ms: 5
    producer:
      # 发生错误后，消息重发的次数。
      retries: 0
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
      compression-type: gzip  #提升性能很重要

    consumer:
      # 设置kafka的消费者组
      group-id: consumer-id
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      #auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: earliest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      # 如果Broker上不存在至少一个配置的主题（topic），则容器是否无法启动，
      # 该设置项结合Broker设置项allow.auto.create.topics=true，如果为false，则会自动创建不存在的topic
      missing-topics-fatal: false

  resources:
    add-mappings: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource    #当前数据源操作类型
    driver-class-name: com.mysql.jdbc.Driver   #此处不对哈  mysql驱动包
    url: jdbc:mysql://localhost:3306/db2022?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    #url: jdbc:mysql://wz9e56j73waav0n3k7o.mysql.rds.aliyuncs.com:3306/db2023?useUnicode=true&characterEncoding=utf-8&useSSL=false
    #username: user2023
    #password: user2023

  #main:
  #  allow-bean-definition-overriding: true
  #datasource:
  #  first:
  #    url: jdbc:oracle:thin:@//192.168.55.233:1521/histjfdb
  #    username: DM
  #    password: Dmtejfxt
  #    driver-class-name: oracle.jdbc.driver.OracleDriver
  #  second:
  #    #type: com.alibaba.druid.pool.DruidDataSource
  #    driver-class-name: com.mysql.jdbc.Driver
  #    url: jdbc:mysql://137.0.16.175:8066/hk_unicom_nmcc?useUnicode=true&characterEncoding=utf-8
  #    username: nmcc
  #    password: Nmcc!Q2w

#logging:
#  level:
#    root: info
#    com.sitech.ijcf: error
#    com.sitech.ip.analysis.mapper: trace


#mybatis:
#  type-aliases-package: com.sitech.prtg.bean       # 所有实体类所在包路径
#  mapper-locations: classpath:mapper/**/*.xml      # mapper映射文件
